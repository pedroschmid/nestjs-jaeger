version: '3'

services:
  nestjs:
    container_name: nestjs
    build:
      dockerfile: Dockerfile
      context: .
    command: npm run start:dev
    ports:
      - 3000:3000
    volumes:
      - .:/opt/app
    depends_on:
      - mysql
    networks:
      - backend
    env_file:
      - .env
  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=jaeger
    networks:
      - backend
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    networks:
      - backend
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 16687:16687
      - 14268:14268
      - 14269:14269
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    networks:
      - backend
  otel_collector:
    container_name: otel_collector
    image: otel/opentelemetry-collector-contrib:latest
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - 4317:4317
    networks:
      - backend
    volumes:
      - "./volumes/otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - "./volumes/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - backend

networks:
  backend: